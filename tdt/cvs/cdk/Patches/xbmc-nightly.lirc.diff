diff -uNr xbmc-nightly.org/xbmc/input/linux/LIRC.cpp xbmc-nightly/xbmc/input/linux/LIRC.cpp
--- xbmc-nightly.org/xbmc/input/linux/LIRC.cpp	2014-01-24 22:02:28.450066038 -0800
+++ xbmc-nightly/xbmc/input/linux/LIRC.cpp	2014-02-18 05:09:36.689580992 -0800
@@ -139,21 +139,27 @@
   CLog::Log(LOGINFO, "LIRC %s: using: %s", __FUNCTION__, addr.sun_path);
 
   // Open the socket from which we will receive the remote commands
-  if ((m_fd = socket(AF_UNIX, SOCK_STREAM, 0)) != -1)
+  m_fd = socket(AF_UNIX, SOCK_STREAM, 0);
+  if (m_fd != -1)    
   {
     // Connect to the socket
+    CLog::Log(LOGINFO, "LIRC %s: socket opened", __FUNCTION__);
     if (connect(m_fd, (struct sockaddr *)&addr, sizeof(addr)) != -1)
     {
       int opts;
       m_bLogConnectFailure = true;
+      CLog::Log(LOGINFO, "LIRC %s: socket connected", __FUNCTION__);
       if ((opts = fcntl(m_fd,F_GETFL)) != -1)
       {
+        CLog::Log(LOGINFO, "LIRC %s: fcntl(F_GETFL) succeed", __FUNCTION__);
         // Set the socket to non-blocking
         opts = (opts | O_NONBLOCK);
         if (fcntl(m_fd,F_SETFL,opts) != -1)
         {
+          CLog::Log(LOGINFO, "LIRC %s: fcntl(F_SETFL) succeed", __FUNCTION__);
           if ((m_file = fdopen(m_fd, "r+")) != NULL)
           {
+            CLog::Log(LOGINFO, "LIRC %s: fdopen succeed", __FUNCTION__);
 #ifdef HAVE_INOTIFY
             // Setup inotify so we can disconnect if lircd is restarted
             if ((m_inotify_fd = inotify_init()) >= 0)
